{
  "submitField": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/submitField';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"CropCode\" : \"1r\",\n    \"FieldName\" : \"My Field-3 Kanpur\",\n    \"PaymentType\" : \"6\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/submitField\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"CropCode\\\" : \\\"1r\\\",\\r\n    \\\"FieldName\\\" : \\\"My Field-3 Kanpur\\\",\\r\n    \\\"PaymentType\\\" : \\\"6\\\",\\r\n    \\\"Points\\\" : {\\r\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"CropCode\\\" : \\\"1r\\\",\\r\n    \\\"FieldName\\\" : \\\"My Field-3 Kanpur\\\",\\r\n    \\\"PaymentType\\\" : \\\"6\\\",\\r\n    \\\"Points\\\" : {\\r\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/submitField\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/submitField\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"CropCode\" : \"1r\",\n    \"FieldName\" : \"My Field-3 Kanpur\",\n    \"PaymentType\" : \"6\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/submitField'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"CropCode\" : \"1r\",\n    \"FieldName\" : \"My Field-3 Kanpur\",\n    \"PaymentType\" : \"6\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/submitField';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"CropCode\" : \"1r\",\n    \"FieldName\" : \"My Field-3 Kanpur\",\n    \"PaymentType\" : \"6\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"CropCode\" : \"1r\",\n    \"FieldName\" : \"My Field-3 Kanpur\",\n    \"PaymentType\" : \"6\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/submitField');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "modifyFieldPoints": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/modifyFieldPoints';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/modifyFieldPoints\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"Points\\\" : {\\r\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"Points\\\" : {\\r\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/modifyFieldPoints\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/modifyFieldPoints\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/modifyFieldPoints'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/modifyFieldPoints';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/modifyFieldPoints');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getFieldAreaByBoundaryPoints": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldAreaByBoundaryPoints';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldAreaByBoundaryPoints\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"Points\\\" : {\\r\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"Points\\\" : {\\r\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldAreaByBoundaryPoints\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldAreaByBoundaryPoints\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldAreaByBoundaryPoints'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldAreaByBoundaryPoints';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Points\" : {\n{'a': {'Latitude': 12.975601039033629, 'Longitude': 77.76385936886072}, 'P_1': {'Latitude': 12.980210619777425, 'Longitude': 77.76523131877184}, 'P_2': {'Latitude': 12.9802524385325, 'Longitude': 77.76818878948689}, 'P_3': {'Latitude': 12.976061053481807, 'Longitude': 77.768659517169}, 'P_4': {'Latitude': 12.975984275561343, 'Longitude': 77.76420503854752}}    }\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldAreaByBoundaryPoints');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getAllFarmersData": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getAllFarmersData';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getAllFarmersData\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getAllFarmersData\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getAllFarmersData\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getAllFarmersData'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getAllFarmersData';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getAllFarmersData');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getFarmerData": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFarmerData';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFarmerData\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFarmerData\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFarmerData\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFarmerData'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFarmerData';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFarmerData');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getMyUsage": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getMyUsage';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getMyUsage\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getMyUsage\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getMyUsage\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getMyUsage'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getMyUsage';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getMyUsage');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getFieldImage": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImage';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n    \"Colormap\" : \"1\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImage\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"ImageType\\\" : \\\"ndvi\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n    \\\"Colormap\\\" : \\\"1\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"ImageType\\\" : \\\"ndvi\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n    \\\"Colormap\\\" : \\\"1\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImage\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImage\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n    \"Colormap\" : \"1\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImage'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n    \"Colormap\" : \"1\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImage';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n    \"Colormap\" : \"1\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n    \"Colormap\" : \"1\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImage');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getFieldImageLinegraph": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImageLinegraph';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImageLinegraph\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"ImageType\\\" : \\\"ndvi\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"ImageType\\\" : \\\"ndvi\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImageLinegraph\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImageLinegraph\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImageLinegraph'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImageLinegraph';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldImageLinegraph');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getFieldIndexAreaImage": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldIndexAreaImage';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldIndexAreaImage\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"ImageType\\\" : \\\"ndvi\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"ImageType\\\" : \\\"ndvi\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldIndexAreaImage\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldIndexAreaImage\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldIndexAreaImage'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldIndexAreaImage';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"ImageType\" : \"ndvi\",\n    \"SensedDay\" : \"20201025\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldIndexAreaImage');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "pauseFieldMonitoring": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/pauseFieldMonitoring';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/pauseFieldMonitoring\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/pauseFieldMonitoring\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/pauseFieldMonitoring\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/pauseFieldMonitoring'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/pauseFieldMonitoring';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/pauseFieldMonitoring');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "resumeFieldMonitoring": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/resumeFieldMonitoring';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/resumeFieldMonitoring\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/resumeFieldMonitoring\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/resumeFieldMonitoring\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/resumeFieldMonitoring'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/resumeFieldMonitoring';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/resumeFieldMonitoring');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "updateCropCode": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/updateCropCode';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"CropCode\" : \"1r\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/updateCropCode\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"CropCode\\\" : \\\"1r\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"CropCode\\\" : \\\"1r\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/updateCropCode\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/updateCropCode\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"CropCode\" : \"1r\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/updateCropCode'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"CropCode\" : \"1r\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/updateCropCode';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"CropCode\" : \"1r\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"CropCode\" : \"1r\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/updateCropCode');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getYieldEstimates": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getYieldEstimates';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getYieldEstimates\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getYieldEstimates\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getYieldEstimates\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getYieldEstimates'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getYieldEstimates';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getYieldEstimates');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "requestPreviousSatelliteData": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/requestPreviousSatelliteData';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"RequestedDate\" : \"20210505\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/requestPreviousSatelliteData\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"RequestedDate\\\" : \\\"20210505\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"RequestedDate\\\" : \\\"20210505\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/requestPreviousSatelliteData\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/requestPreviousSatelliteData\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"RequestedDate\" : \"20210505\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/requestPreviousSatelliteData'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"RequestedDate\" : \"20210505\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/requestPreviousSatelliteData';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"RequestedDate\" : \"20210505\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"RequestedDate\" : \"20210505\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/requestPreviousSatelliteData');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getSensedDays": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSensedDays';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSensedDays\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSensedDays\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSensedDays\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSensedDays'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSensedDays';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSensedDays');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getSARDays": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSARDays';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSARDays\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSARDays\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSARDays\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSARDays'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSARDays';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getSARDays');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "setReportLanguage": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/setReportLanguage';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"Language\" : \"['en', 'hi']\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/setReportLanguage\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"Language\\\" : \\\"['en', 'hi']\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"Language\\\" : \\\"['en', 'hi']\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/setReportLanguage\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/setReportLanguage\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"Language\" : \"['en', 'hi']\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/setReportLanguage'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"Language\" : \"['en', 'hi']\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/setReportLanguage';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"Language\" : \"['en', 'hi']\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"Language\" : \"['en', 'hi']\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/setReportLanguage');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getFieldReport": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldReport';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n    \"ReportFormat\" : \"PDF\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldReport\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n    \\\"ReportFormat\\\" : \\\"PDF\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n    \\\"ReportFormat\\\" : \\\"PDF\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldReport\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldReport\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n    \"ReportFormat\" : \"PDF\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldReport'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n    \"ReportFormat\" : \"PDF\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldReport';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n    \"ReportFormat\" : \"PDF\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n    \"ReportFormat\" : \"PDF\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getFieldReport');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getPastWeatherGraph": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPastWeatherGraph';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPastWeatherGraph\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"SensedDay\\\" : \\\"20201025\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPastWeatherGraph\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPastWeatherGraph\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPastWeatherGraph'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPastWeatherGraph';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"SensedDay\" : \"20201025\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPastWeatherGraph');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getForecastWeather": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeather';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeather\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeather\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeather\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeather'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeather';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeather');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getPresentWeatherData": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPresentWeatherData';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPresentWeatherData\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPresentWeatherData\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPresentWeatherData\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPresentWeatherData'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPresentWeatherData';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getPresentWeatherData');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getHistoricalFieldWeather": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getHistoricalFieldWeather';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"NumberOfDays\" : \"20\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getHistoricalFieldWeather\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"NumberOfDays\\\" : \\\"20\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"FieldID\\\" : \\\"1668483626232\\\",\\r\n    \\\"NumberOfDays\\\" : \\\"20\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getHistoricalFieldWeather\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getHistoricalFieldWeather\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"NumberOfDays\" : \"20\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getHistoricalFieldWeather'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"NumberOfDays\" : \"20\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getHistoricalFieldWeather';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"NumberOfDays\" : \"20\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"FieldID\" : \"1668483626232\",\n    \"NumberOfDays\" : \"20\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getHistoricalFieldWeather');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getForecastWeatherFromLatLong": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeatherFromLatLong';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Latitude\" : \"50.5082567070\",\n    \"Longitude\" : \"14.2744310003\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeatherFromLatLong\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"Latitude\\\" : \\\"50.5082567070\\\",\\r\n    \\\"Longitude\\\" : \\\"14.2744310003\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"Latitude\\\" : \\\"50.5082567070\\\",\\r\n    \\\"Longitude\\\" : \\\"14.2744310003\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeatherFromLatLong\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeatherFromLatLong\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Latitude\" : \"50.5082567070\",\n    \"Longitude\" : \"14.2744310003\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeatherFromLatLong'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Latitude\" : \"50.5082567070\",\n    \"Longitude\" : \"14.2744310003\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeatherFromLatLong';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Latitude\" : \"50.5082567070\",\n    \"Longitude\" : \"14.2744310003\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Latitude\" : \"50.5082567070\",\n    \"Longitude\" : \"14.2744310003\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getForecastWeatherFromLatLong');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  },
  "getDatabase": {
    "dart": "import 'dart:convert' show json;\nimport 'package:http/http.dart' as http;\n\nFuture postRequest () async {\n  const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getDatabase';\n    \n  final bodyMap = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Crop\" : \"apple\",\n  };\n\n  final response = await http.post(\n    endpointUrl,\n    headers : {'Content-Type': 'application/json'},\n    body: json.encode(bodyMap),\n  );\n\n  print(response.statusCode);\n  print(response.body);\n  return response;\n}",
    "java": "OkHttpClient client = new OkHttpClient();\n\nString endpointUrl = \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getDatabase\";\n\nMediaType mediaType = MediaType.parse(\"application/json\");\nString value = \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"Crop\\\" : \\\"apple\\\",\\r\n}\";\nRequestBody body = RequestBody.create(mediaType, value);\n\nRequest request = new Request.Builder()\n\t.url(endpointUrl)\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.build();\n\nResponse response = client.newCall(request).execute();",
    "kotlin": "val client = OkHttpClient()\n\nval mediaType = MediaType.parse(\"application/json\")\nval body = RequestBody.create(mediaType, \"{\\r\n    \\\"UID\\\" : \\\"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\\\",\\r\n    \\\"Crop\\\" : \\\"apple\\\",\\r\n}\")\nval request = Request.Builder()\n\t.url(\"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getDatabase\")\n\t.post(body)\n\t.addHeader(\"content-type\", \"application/json\")\n\t.addHeader(\"X-RapidAPI-Key\", \"664cfb3101msh8d4bc82037faf5bp1ac7b4jsnbe2305691ec2\")\n\t.addHeader(\"X-RapidAPI-Host\", \"farmonaut-satellite-and-weather-data1.p.rapidapi.com\")\n\t.build()\n\nval response = client.newCall(request).execute()",
    "swift": "import Foundation\n\nlet url = URL(string: \"https://us-central1-farmbase-b2f7e.cloudfunctions.net/getDatabase\")!\n\n// prepare json data\nlet json: [String: Any] = [\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Crop\" : \"apple\",\n] \nlet jsonData = try? JSONSerialization.data(withJSONObject: json)\n \n// create post request\nvar request = URLRequest(url: url)\nrequest.httpMethod = \"POST\"\n \n// insert json data to the request\nrequest.httpBody = jsonData\n \nlet task = URLSession.shared.dataTask(with: request) { (data, response, error) in\n  guard let data = data, error == nil else {\n    print(error?.localizedDescription ?? \"No data\")\n    return\n  }\n  let responseJSON = try? JSONSerialization.jsonObject(with: data, options: [])\n  if let responseJSON = responseJSON as? [String: Any] {\n    print(responseJSON)\n  }\n}\n \ntask.resume()",
    "python": "import requests\n\nendpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getDatabase'\nbodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Crop\" : \"apple\",\n}\n \nresponse = requests.post(\n  endpointUrl, \n  json = bodyObj\n)\n \nprint(\"Status code: \", response.status_code)\nprint(\"Printing Entire Post Request\")\nprint(response.json())",
    "javascript": "const endpointUrl = 'https://us-central1-farmbase-b2f7e.cloudfunctions.net/getDatabase';\nconst bodyObj = {\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Crop\" : \"apple\",\n};\n \nconst httpRequest = new XMLHttpRequest();\nhttpRequest.open('POST', endpointUrl,true);\nhttpRequest.onload = function(){\n  let responseData = httpRequest.responseText;\n};\nhttpRequest.send(json.stringify(bodyObj));",
    "php": "<?php\n\n$client = new http\\Client;\n$request = new http\\Client\\Request;\n\n$body = new http\\Message\\Body;\n$body->append(\"{\n    \"UID\" : \"BpkwnSJdwHTjKhdm8ZWKJBO6HUn5\",\n    \"Crop\" : \"apple\",\n}\");\n\n$request->setRequestUrl('https://us-central1-farmbase-b2f7e.cloudfunctions.net/getDatabase');\n$request->setRequestMethod('POST');\n$request->setBody($body);\n\n$request->setHeaders([\n\t'content-type' => 'application/json'\n]);\n\n$client->enqueue($request)->send();\n$response = $client->getResponse();\n\necho $response->getBody();"
  }
}
